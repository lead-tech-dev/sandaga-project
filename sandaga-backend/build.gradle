import javax.swing.text.MutableAttributeSet

plugins {
    id 'java'
    id 'org.springframework.boot' version '2.4.4'
    id 'io.spring.dependency-management' version '1.0.11.RELEASE'
    id "io.freefair.lombok" version "6.6.1"
    id 'com.google.cloud.tools.jib' version '3.3.1'
}

group = 'com.mjtech'
version = '0.0.1-SNAPSHOT'

java {
    sourceCompatibility = '11'
}

repositories {
    mavenCentral()
}

jib {
    var version = "0.0.1-SNAPSHOT"

    from {
        image = 'eclipse-temurin:17'
        platforms {
            platform {
                architecture = 'arm64'
                os = 'linux'
            }
            platform {
                architecture = 'amd64'
                os = 'linux'
            }
        }
    }
    to {
        image = "docker.io/cartman81/${rootProject.name}:${version}"
        tags = ['latest']

        auth {
            username = "cartman81"
            password = "Makong57@"
        }
    }
}

jar {
    manifest {
        attributes 'Main-Class': 'com.mjtech.sandaga.SandagaBackendApplication'
    }
}


//start web service: mondial relay
ext.jaxwsSourceDir = "${buildDir}/generated/sources/jaxws"

// tag::jaxb[]
configurations {
    jaxb
}

bootJar {
    archiveBaseName = 'gs-producing-web-service'
    archiveVersion =  '0.1.0'
}
// end::jaxb[]

// tag::xsd[]


task genJaxb {
    ext.sourcesDir = jaxwsSourceDir
    ext.schema = "https://www.mondialrelay.fr/webservice/Web_Services.asmx?WSDL"

    outputs.dir sourcesDir

    doLast() {
        project.ant {
            taskdef name: "xjc", classname: "com.sun.tools.xjc.XJCTask",
                    classpath: configurations.jaxb.asPath
            mkdir(dir: sourcesDir)

            xjc(destdir: sourcesDir, schema: schema) {
                arg(value: "-wsdl")
                produces(dir: sourcesDir, includes: "**/*.java")
            }
        }
    }
}

sourceSets {
    main {
        java.srcDirs += jaxwsSourceDir
    }
}

compileJava.dependsOn genJaxb
// end::xsd[]
//end web service: mondial relay


dependencies {

    implementation 'org.springframework.boot:spring-boot-starter-web'
    implementation 'org.springframework.boot:spring-boot-starter-thymeleaf'
    testImplementation 'org.springframework.boot:spring-boot-starter-test'
    compileOnly group: 'org.projectlombok', name: 'lombok', version: '1.18.28'

    // OpenAPI Starts
    //swaggerCodegen 'org.openapitools:openapi-generator-cli:5.0.0'
    compileOnly 'io.swagger:swagger-annotations:1.6.2'
    compileOnly 'org.springframework.boot:spring-boot-starter-validation'
    implementation 'com.fasterxml.jackson.dataformat:jackson-dataformat-xml'
    compileOnly 'org.openapitools:jackson-databind-nullable:0.2.1'

    /*implementation 'org.springframework.boot:spring-boot-starter-hateoas'*/

    compileOnly 'io.springfox:springfox-oas:3.0.0'
    // OpenAPI Ends

    // DB Starts
    implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
    implementation 'org.flywaydb:flyway-core'
    runtimeOnly 'org.postgresql:postgresql'
    implementation group: 'org.hibernate', name: 'hibernate-spatial', version: '5.4.14.Final'
    implementation group: 'com.graphhopper.external', name: 'jackson-datatype-jts', version: '0.12-2.5-1'
    implementation group: 'org.locationtech.jts', name: 'jts-core', version: '1.18.2'
    //runtimeOnly 'com.h2database:h2'
    // DB Ends

    // Security Starts
    //implementation 'org.springframework.boot:spring-boot-starter-security'
    implementation 'org.springframework.boot:spring-boot-starter-oauth2-resource-server'
    implementation 'com.auth0:java-jwt:3.12.0'
    implementation group: 'org.springframework.boot', name: 'spring-boot-starter-mail', version: '2.0.1.RELEASE'
    // Security Ends

    // Phone number verification and chat
    implementation group: 'com.twilio.sdk', name: 'twilio', version: '9.12.0'
    implementation 'org.springframework.boot:spring-boot-starter-websocket'
    implementation 'com.google.guava:guava:latest.release'
    implementation group: 'org.webjars', name: 'sockjs-client', version: '1.5.1'
    implementation group: 'org.webjars', name: 'stomp-websocket', version: '2.3.4'

    //web service: mondial relay
    implementation 'org.springframework.boot:spring-boot-starter-web-services'
    jaxb("org.glassfish.jaxb:jaxb-xjc")
    implementation 'org.glassfish.jaxb:jaxb-runtime:2.3.5'
    implementation 'com.google.code.gson:gson:2.10.1'

    // Stripe
    implementation 'com.stripe:stripe-java:24.7.0'

    // Metrics
    implementation 'org.springframework.boot:spring-boot-starter-actuator'

    // Test containers
    testImplementation "org.testcontainers:testcontainers:1.19.5"
    testImplementation group: 'org.testcontainers', name: 'postgresql', version: '1.19.5'
    testImplementation group: 'org.testcontainers', name: 'junit-jupiter', version: '1.19.5'
    testImplementation 'org.springframework.boot:spring-boot-starter-webflux'
    implementation group: 'com.github.javafaker', name: 'javafaker', version: '1.0.2'
}
tasks.named('test') {
    useJUnitPlatform()
}
